;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   PS0032.PSH: PER PIXEL POINT LIGHTS
;   --------------------------------------------------------------------------
;
;   Formula:
;
;       C = 1/sqr(radius)
;       V = LightPos-VertPos (per pixel in worldspace)
;       D = V dot V (distance to light)
;       I = 1-(D*C) (intensity)
;
;   c0 = light0 colour
;   c1 = light1 colour
;   c2 = light2 colour
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   tex t0 = 0: Distance attenuation in volume texture
;   tex t1 = 1: Distance attenuation in volume texture
;   tex t2 = 2: Distance attenuation in volume texture
;   tex t3 = projective map
;
;==----------------------------------------------------------------------------
;
;   Calculate intensities
;
;==----------------------------------------------------------------------------
                                        ;
    mul r0.rgb,c0.rgb,t0.a              ;   r0.rgb = LightCol[0]*LightInt[0]
    mad r0.rgb,c1.rgb,t1.a,r0.rgb       ;   r0.rgb = LightCol[1]*LightInt[1] + r0
    mad r0.rgb,c2.rgb,t2.a,r0.rgb       ;   r0.rgb = LightCol[1]*LightInt[1] + r0
                                        ;
    add r0.rgb,v0.rgb,r0.rgb +          ;   r0.rgb = Lighting + Vertex Colour
    mul_d2 r0.a,v0.a,t3.b               ;   r0.a   = Attenuation * projmap
                                        ;
    lrp r0.rgb,r0_sat.a,c0.a,r0.rgb +   ;
    mov r0.a,v1.a                       ;
                                        ;
;==----------------------------------------------------------------------------
;
;   Use final combiner to calculate blend
;
;==----------------------------------------------------------------------------

    xfc zero,zero,r0,zero,zero,zero,r0.a
