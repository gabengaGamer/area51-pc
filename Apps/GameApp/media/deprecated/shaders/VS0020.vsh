;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   VS0020.VSH: PER PIXEL POINT LIGHT
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            ;
;==----------------------------------------------------------------------------
;
;   Calculate distance attenuation
;
;==----------------------------------------------------------------------------
                            ;
    mov  r4.x,c-1.x         ;   Can only use one const per instruction
                            ;
;==----------------------------------------------------------------------------
;
;   Calculate intensity: light 0                 ( r10 = normal in worldspace )
;
;==----------------------------------------------------------------------------
                            ;
    sub  r1,v0,c[84]        ;   r1 = Vpos-Lpos
    mad  r1,r1,c[85],r4.x   ;   r1 = r1 * 1/2r + 0.5
;   max  r1,r1,c[-1].z      ;   r1 = r1.x clamped 0-1
;   min  r1,r1,c[-1].w      ;
                            ;
;==----------------------------------------------------------------------------
;
;   Calculate intensity: light 1
;
;==----------------------------------------------------------------------------
                            ;
    sub  r2,v0,c[86]        ;   r2 = Vpos-Lpos
    mad  r2,r2,c[87],r4.x   ;   r2 = r2 * 1/2r + 0.5
;   max  r2,r2,c[-1].z      ;   r2 = r4.x clamped 0-1
;   min  r2,r2,c[-1].w      ;
                            ;
;==----------------------------------------------------------------------------
;
;   Calculate intensity: light 2
;
;==----------------------------------------------------------------------------
                            ;
    sub  r3,v0,c[88]        ;   r3 = Vpos-Lpos
    mad  r3,r3,c[89],r4.x   ;   r3 = r3 * 1/2r + 0.5
;   max  r3,r3,c[-1].z      ;   r3 = r3.x clamped 0-1
;   min  r3,r3,c[-1].w      ;
                            ;
;==----------------------------------------------------------------------------
;
;   Light activation
;
;==----------------------------------------------------------------------------
                            ;
    mul oT0.xyz,r1,c[-3].x  ;   Turn light on/off
    mul oT1.xyz,r2,c[-3].y  ;   Turn light on/off
    mul oT2.xyz,r3,c[-3].z  ;   Turn light on/off
                            ;
;==----------------------------------------------------------------------------
;
;   Store diffuse colour
;
;==----------------------------------------------------------------------------
                            ;
    mov oD0,r5              ;   oD0 = diffuse colour
